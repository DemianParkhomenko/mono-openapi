/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/merchant/invoice/create': {
    /**
     * Створення рахунку
     * @description Створення рахунку для оплати
     */
    post: {
      parameters: {
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
          /** @description Назва CMS, якщо ви розробляєте платіжний модуль для CMS */
          'X-Cms'?: string;
          /** @description Версія CMS, якщо ви розробляєте платіжний модуль для CMS */
          'X-Cms-Version'?: string;
        };
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InvoiceCreateRequest'];
        };
      };
      responses: {
        /** @description Посилання на оплату рахунку */
        200: {
          content: {
            'application/json': components['schemas']['InvoiceCreateResponse'];
          };
        };
        /** @description Один із вхідних параметрів невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Пошук за одним із параметрів запиту завершився неуспішно */
        404: {
          content: {
            'application/json': components['schemas']['NotFoundError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/invoice/status?invoiceId={invoiceId}': {
    /**
     * Статус рахунку
     * @description Метод перевірки статусу рахунку при розсинхронізації з боку продавця або відсутності webHookUrl при створенні рахунку.
     */
    get: {
      parameters: {
        query?: {
          /** @description Ідентифікатор рахунку */
          invoiceId?: string;
        };
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
        };
      };
      responses: {
        /** @description Інформація про рахунок */
        200: {
          content: {
            'application/json': components['schemas']['InvoiceStatusResponse'];
          };
        };
        /** @description Один із вхідних параметрів невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Рахунок не знайдено */
        404: {
          content: {
            'application/json': components['schemas']['NotFoundError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/invoice/cancel': {
    /**
     * Скасування оплати
     * @description Скасування успішної оплати рахунку
     */
    post: {
      parameters: {
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
        };
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InvoiceCancelRequest'];
        };
      };
      responses: {
        /** @description Статус операції скасування */
        200: {
          content: {
            'application/json': components['schemas']['InvoiceCancelResponse'];
          };
        };
        /** @description Один із вхідних параметрів невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Рахунок не знайдено */
        404: {
          content: {
            'application/json': components['schemas']['NotFoundError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/invoice/remove': {
    /**
     * Інвалідація рахунку
     * @description Інвалідація рахунку, якщо за ним ще не було здіснено оплати
     */
    post: {
      parameters: {
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
        };
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InvoiceRemoveRequest'];
        };
      };
      responses: {
        /** @description Інвойс було деактивовано, пуста відповідь */
        200: {
          content: {
            'application/json': components['schemas']['EmptyResponse'];
          };
        };
        /** @description Один із вхідних параметрів невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Рахунок не знайдено */
        404: {
          content: {
            'application/json': components['schemas']['NotFoundError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/pubkey': {
    /**
     * Відкритий ключ для верифікації підписів
     * @description Отримання відкритого ключа для перевірки підпису, який включено у вебхуки. Ключ можна кешувати і робити запит на отримання нового, коли верифікація підпису з поточним ключем перестане працювати. Кожного разу робити запит на отримання ключа не треба
     */
    get: {
      parameters: {
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
        };
      };
      responses: {
        /** @description Base64-закодований ECDSA відкритий ключ */
        200: {
          content: {
            'application/json': components['schemas']['PubkeyResponse'];
          };
        };
        /** @description Токен відсутній */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/invoice/finalize': {
    /** Фіналізація суми холду */
    post: {
      parameters: {
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
        };
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InvoiceFinalizeRequest'];
        };
      };
      responses: {
        /** @description Результат фіналізації */
        200: {
          content: {
            'application/json': components['schemas']['InvoiceFinalizeResponse'];
          };
        };
        /** @description Один із вхідних параметрів невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Рахунок не знайдено */
        404: {
          content: {
            'application/json': components['schemas']['NotFoundError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/qr/details?qrId={qrId}': {
    /**
     * Інформація про QR-касу
     * @description Інформація про QR-касу, лише для активованих QR-кас
     */
    get: {
      parameters: {
        query?: {
          /** @description Ідентифікатор QR-каси */
          qrId?: string;
        };
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
        };
      };
      responses: {
        /** @description Інформація про QR-касу */
        200: {
          content: {
            'application/json': components['schemas']['QrDetailsResponse'];
          };
        };
        /** @description Ідентифікатор QR-каси невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description QR-касу не знайдено */
        404: {
          content: {
            'application/json': components['schemas']['NotFoundError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/qr/reset-amount': {
    /** Видалення суми оплати */
    post: {
      parameters: {
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
        };
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['QrResetRequest'];
        };
      };
      responses: {
        /** @description Суму було видалено, пуста відповідь */
        200: {
          content: {
            'application/json': components['schemas']['EmptyResponse'];
          };
        };
        /** @description Ідентифікатор QR-каси невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description QR-касу не знайдено */
        404: {
          content: {
            'application/json': components['schemas']['NotFoundError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/qr/list': {
    /** Список QR-кас */
    get: {
      parameters: {
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
        };
      };
      responses: {
        /** @description Список QR-кас */
        200: {
          content: {
            'application/json': components['schemas']['QrListResponse'];
          };
        };
        /** @description Токен відсутній */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/details': {
    /** Дані мерчанта */
    get: {
      parameters: {
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
        };
      };
      responses: {
        /** @description Дані мерчанта */
        200: {
          content: {
            'application/json': components['schemas']['MerchantDetailsResponse'];
          };
        };
        /** @description Один із вхідних параметрів невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/statement': {
    /** Виписка за період */
    get: {
      parameters: {
        query?: {
          /** @description utc unix timestamp */
          from?: number;
          /** @description utc unix timestamp */
          to?: number;
        };
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
        };
      };
      responses: {
        /** @description Виписка */
        200: {
          content: {
            'application/json': components['schemas']['MerchantStatementResponse'];
          };
        };
        /** @description Один із вхідних параметрів невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/wallet/card': {
    /** Видалення токенізованої картки */
    delete: {
      parameters: {
        query?: {
          /** @description Токен картки */
          cardToken?: string;
        };
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
        };
      };
      responses: {
        /** @description Картку видалено */
        200: {
          content: {
            'application/json': components['schemas']['EmptyResponse'];
          };
        };
        /** @description Один із вхідних параметрів невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/wallet': {
    /** Список карток у гаманці */
    get: {
      parameters: {
        query?: {
          /** @description Ідентифікатор гаманця покупця */
          walletId?: string;
        };
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
        };
      };
      responses: {
        /** @description Список токенізованих карток */
        200: {
          content: {
            'application/json': components['schemas']['MerchantWalletResponse'];
          };
        };
        /** @description Один із вхідних параметрів невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/wallet/payment': {
    /**
     * Оплата по токену
     * @description Створення платежу за токеном картки
     */
    post: {
      parameters: {
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
          /** @description Назва CMS, якщо ви розробляєте платіжний модуль для CMS */
          'X-Cms'?: string;
          /** @description Версія CMS, якщо ви розробляєте платіжний модуль для CMS */
          'X-Cms-Version'?: string;
        };
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['MerchantWalletPaymentRequest'];
        };
      };
      responses: {
        /** @description Дані платежу */
        200: {
          content: {
            'application/json': components['schemas']['MerchantWalletPaymentResponse'];
          };
        };
        /** @description Один із вхідних параметрів невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/invoice/payment-direct': {
    /**
     * Оплата за реквізитами
     * @description Створення рахунку та його оплата за реквізитами картки. Увага, це апі буде працювати тільки за умови наявності у мерчанта активного PCI DSS сертифіката!
     */
    post: {
      parameters: {
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
          /** @description Назва CMS, якщо ви розробляєте платіжний модуль для CMS */
          'X-Cms'?: string;
          /** @description Версія CMS, якщо ви розробляєте платіжний модуль для CMS */
          'X-Cms-Version'?: string;
        };
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['PaymentDirectRequest'];
        };
      };
      responses: {
        /** @description Дані рахунку та оплати */
        200: {
          content: {
            'application/json': components['schemas']['MerchantWalletPaymentResponse'];
          };
        };
        /** @description Один із вхідних параметрів невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/submerchant/list': {
    /**
     * Список субмерчантів
     * @description Дане апі потрібне обмеженому колу осіб, яким при створенні рахунку треба явно вказувати термінал
     */
    get: {
      parameters: {
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
        };
      };
      responses: {
        /** @description Список субмерчантів */
        200: {
          content: {
            'application/json': components['schemas']['SubmerchantListResponse'];
          };
        };
        /** @description Один із вхідних параметрів невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/invoice/fiscal-checks?invoiceId={invoiceId}': {
    /**
     * Фіскальні чеки
     * @description Метод для отримання даних фіскальних чеків та їх статусів
     */
    get: {
      parameters: {
        query?: {
          /** @description Ідентифікатор рахунку */
          invoiceId?: string;
        };
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
        };
      };
      responses: {
        /** @description Список фіскальних чеків */
        200: {
          content: {
            'application/json': components['schemas']['FiscalCheckListResponse'];
          };
        };
        /** @description Один із вхідних параметрів невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Інвойс не знайдено */
        404: {
          content: {
            'application/json': components['schemas']['NotFoundError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
  '/api/merchant/invoice/payment-info?invoiceId={invoiceId}': {
    /**
     * DEPRECATED — Розширена інформація про успішну оплату\n
     * @description **Дані апі застаріле! Слід використовувати Статус рахунку, замість цього апі** \n\nДані про успішну оплату, якщо вона була здійснена\n
     */
    get: {
      parameters: {
        query?: {
          /** @description Ідентифікатор рахунку */
          invoiceId?: string;
        };
        header?: {
          /** @description Токен з особистого кабінету https://web.monobank.ua/ або тестовий токен з https://api.monobank.ua/ */
          'X-Token'?: string;
        };
      };
      responses: {
        /** @description Інформація про успішну оплату */
        200: {
          content: {
            'application/json': components['schemas']['InvoicePaymentInfoResponse'];
          };
        };
        /** @description Один із вхідних параметрів невалідний */
        400: {
          content: {
            'application/json': components['schemas']['BadRequestError'];
          };
        };
        /** @description Токен невалідний */
        403: {
          content: {
            'application/json': components['schemas']['ForbiddenError'];
          };
        };
        /** @description Рахунок не знайдено */
        404: {
          content: {
            'application/json': components['schemas']['NotFoundError'];
          };
        };
        /** @description Http-метод невалідний */
        405: {
          content: {
            'application/json': components['schemas']['MethodNotAllowedError'];
          };
        };
        /** @description Занадто багато запитів */
        429: {
          content: {
            'application/json': components['schemas']['TooManyRequestsError'];
          };
        };
        /** @description Під час виконання запиту виникла непередбачена помилка */
        500: {
          content: {
            'application/json': components['schemas']['InternalServerError'];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    CancelListItem: {
      /**
       * @description Статус заяви скасування:\n\n  `processing` - заява на скасування знаходиться в обробці\n\n  `success` - заяву на скасування виконано успішно\n\n  `failure` - неуспішне скасування\n
       * @enum {string}
       */
      status: 'processing' | 'success' | 'failure';
      /**
       * Format: int64
       * @description Сума у мінімальних одиницях
       * @example 4200
       */
      amount?: number;
      /**
       * Format: int32
       * @description ISO 4217 код валюти
       * @example 980
       */
      ccy?: number;
      /**
       * Format: date-time
       * @description Дата і час створення заяви на скасування
       */
      createdDate: string;
      /**
       * Format: date-time
       * @description Дата і час останньої модифікації операції скасування
       */
      modifiedDate: string;
      /**
       * @description Код авторизації
       * @example 662476
       */
      approvalCode?: string;
      /**
       * @description Ідентифікатор транзакції в платіжній системі
       * @example 060189181768
       */
      rrn?: string;
      /**
       * @description Референс операції скасування, який було вказано продавцем
       * @example 635ace02599849e981b2cd7a65f417fe
       */
      extRef?: string;
    };
    QrListItem: {
      /**
       * @description Короткий ідентифікатор QR-каси
       * @example OBJE
       */
      shortQrId: string;
      /**
       * @description Ідентифікатор QR-каси для встановлення суми оплати на існуючих QR-кас
       * @example XJ_DiM4rTd5V
       */
      qrId: string;
      /**
       * @description Тип суми одноразової каси:\n\n  `merchant` - суму встановлює мерчант\n\n  `client` - суму встановлює клієнт\n\n  `fix` - сума фіксована\n
       * @enum {string}
       */
      amountType: 'merchant' | 'client' | 'fix';
      /**
       * @description Посилання на оплату QR-каси
       * @example https://pay.mbnk.biz/XJ_DiM4rTd5V
       */
      pageUrl: string;
    };
    MerchantStatementItem: {
      /**
       * @description Ідентифікатор рахунку, за яким здійснювалась оплата
       * @example 2205175v4MfatvmUL2oR
       */
      invoiceId: string;
      /**
       * @example success
       * @enum {string}
       */
      status: 'hold' | 'processing' | 'success' | 'failure';
      /**
       * @description Маскований номер картки, за якою здійснювалась оплата
       * @example 444403******1902
       */
      maskedPan: string;
      /**
       * Format: date-time
       * @description Дата і час фін. операції у форматі RFC-3339
       */
      date: string;
      /**
       * @description Схема оплати:\n\n  `bnpl_later_30` - bnpl-оплата\n\n  `bnpl_parts_4` - платіж 4 частини\n\n  `full` - повна оплата\n
       * @enum {string}
       */
      paymentScheme: 'bnpl_later_30' | 'bnpl_parts_4' | 'full';
      /**
       * Format: int64
       * @description Сума оплати у мінімальних одиницях (копійки для гривні)
       * @example 4200
       */
      amount: number;
      /**
       * Format: int64
       * @description Сума, яку отримає мерчант на свій рахунок після взаєморозрахунку з банком
       * @example 4100
       */
      profitAmount?: number;
      /**
       * Format: int32
       * @description ISO 4217 код валюти
       * @example 980
       */
      ccy: number;
      /**
       * @description Код авторизації транзакції
       * @example 662476
       */
      approvalCode?: string;
      /**
       * @description Ідентифікатор транзакції в платіжній системі
       * @example 060189181768
       */
      rrn?: string;
      /**
       * @description Номер чека, замовлення, тощо, який було вказано мерчантом при створенні рахунку
       * @example 84d0070ee4e44667b31371d8f8813947
       */
      reference?: string;
      /**
       * @description Короткий ідентифікатор QR-каси
       * @example OBJE
       */
      shortQrId?: string;
      /**
       * @description Призначення платежу, визначається продавцем
       * @example Покупка щастя
       */
      destination?: string;
      /** @description Перелік операцій скасування */
      cancelList?: {
        /**
         * Format: int64
         * @description Сума оплати у мінімальних одиницях (копійки для гривні)
         * @example 4200
         */
        amount: number;
        /**
         * Format: int32
         * @description ISO 4217 код валюти
         * @example 980
         */
        ccy: number;
        /**
         * Format: date-time
         * @description Дата і час фін. операції у форматі RFC-3339
         */
        date: string;
        /**
         * @description Код авторизації транзакції
         * @example 662476
         */
        approvalCode?: string;
        /**
         * @description Ідентифікатор транзакції в платіжній системі
         * @example 060189181768
         */
        rrn?: string;
        /**
         * @description Маскований номер картки, на яку здійснювалось повернення коштів
         * @example 444403******1902
         */
        maskedPan: string;
      }[];
    };
    InvoiceCreateRequest: {
      /**
       * Format: int64
       * @description Сума оплати у мінімальних одиницях (копійки для гривні)
       * @example 4200
       */
      amount: number;
      /**
       * Format: int32
       * @description ISO 4217 код валюти, за замовчуванням 980 (гривня)
       * @example 980
       */
      ccy?: number;
      merchantPaymInfo?: components['schemas']['MerchantPaymInfoItem'];
      /**
       * @description Адреса для повернення (GET) - на цю адресу буде переадресовано користувача після завершення оплати (у разі успіху або помилки)
       * @example https://example.com/your/website/result/page
       */
      redirectUrl?: string;
      /**
       * @description Адреса для CallBack (POST) – на цю адресу буде надіслано дані про стан платежу при кожній зміні статусу. Зміст тіла запиту ідентичний відповіді запиту “Статус рахунку”. **Гарантії доставки повідомлень одне за одним не надається. Тобто, може бути ситуація, коли вебхук про успішну оплату (`status=success`) прийде пізніше за вебхук про обробку цієї оплати (`status=processing`). Краще орієнтуватись на поле `modifiedDate` при аналізі поточного статусу рахунку. Вебхук із більшим `modifiedDate` буде актуальним**
       * @example https://example.com/mono/acquiring/webhook/maybesomegibberishuniquestringbutnotnecessarily
       */
      webHookUrl?: string;
      /**
       * Format: int64
       * @description Строк дії в секундах, за замовчуванням рахунок перестає бути дійсним через 24 години
       * @example 3600
       */
      validity?: number;
      /**
       * @description Тип операції. Для значення `hold` термін складає 9 днів. Якщо через 9 днів холд не буде фіналізовано — він скасовується
       * @default debit
       * @enum {string}
       */
      paymentType?: 'debit' | 'hold';
      /**
       * @description Ідентифікатор QR-каси для встановлення суми оплати на існуючих QR-кас
       * @example XJ_DiM4rTd5V
       */
      qrId?: string;
      /**
       * @description Код терміналу субмерчанта, з апі 'Список субмерчантів'. Доступний обмеженому колу мерчантів, які точно знають, що їм це потрібно
       * @example 0a8637b3bccb42aa93fdeb791b8b58e9
       */
      code?: string;
      /** @description Дані для збереження (токенізації) картки. Для підключення функції, зверніться, будь ласка, в підтримку monobank. Токенізація недоступна за замовчуванням */
      saveCardData?: {
        /** @description Ознака зберігання картки (токенізації) після оплати */
        saveCard: boolean;
        /**
         * @description Ідентифікатор гаманця користувача
         * @example 69f780d841a0434aa535b08821f4822c
         */
        walletId?: string;
      };
    };
    /** @description Інформаційні дані замовлення, яке буде оплачуватсь. Обовʼязково вказувати при активній звʼязці з ПРРО (звʼязка створюється у веб-кабінеті https://web.monobank.ua) */
    MerchantPaymInfoItem: {
      /**
       * @description Номер чека, замовлення, тощо; визначається мерчантом
       * @example 84d0070ee4e44667b31371d8f8813947
       */
      reference?: string;
      /**
       * @description Призначення платежу
       * @example Покупка щастя
       */
      destination?: string;
      /**
       * @description Службове інформаційне поле
       * @example Покупка щастя
       */
      comment?: string;
      /**
       * @description Масив пошт, на які потрібно відправити фіскальний чек, якщо у мерчанта активна звʼязка з checkbox
       * @example []
       */
      customerEmails?: string[];
      /** @description Склад замовлення, використовується для відображення кошика замовлення, обовʼязково вказувати при активній звʼязці з ПРРО (звʼязка створюється у веб-кабінеті https://web.monobank.ua або через портал check by mono https://www.monobank.ua/check) */
      basketOrder?: {
        /**
         * @description Назва товару
         * @example Табуретка
         */
        name: string;
        /**
         * Format: float
         * @description Кількість одиниць товару
         * @example 2
         */
        qty: number;
        /**
         * Format: int64
         * @description Сума у мінімальних одиницях валюти за одиницю товару; якщо ви торгуєте табуретками, ціна якої 21 гривня, і у вас замовлення на 2 табуретки, то qty=2, sum=2100, amount=4200
         * @example 2100
         */
        sum: number;
        /** @description Лінк на зображення товару */
        icon?: string;
        /**
         * @description Назва одиниці вимiру товару
         * @example шт.
         */
        unit?: string;
        /**
         * @description Код товару, обов'язковий для фіскалізації
         * @example d21da1c47f3c45fca10a10c32518bdeb
         */
        code: string;
        /** @description Значення штрих-коду, може бути потрібно для фіскалізації */
        barcode?: string;
        /** @description Текст, що передує назві товару, може бути потрібний для фіскалізації */
        header?: string;
        /** @description Текст, після товару, може бути потрібний для фіскалізації */
        footer?: string;
        /**
         * @description Масив податкових ставок, які було обрано на порталі Checkbox при реєстрації каси. При використанні ПРРО monopay податкові ставки наразі не застосовуються
         * @example []
         */
        tax?: number[];
        /** @description Код УКТ ЗЕД */
        uktzed?: string;
        /** @description Масив знижок або надбавок, які будуть передані в checkbox для фіскалізації, якщо звʼязку з checkbox активовано */
        discounts?: {
          /**
           * @description Тип знижки або надбавки\n`DISCOUNT` — знижка\n`EXTRA_CHARGE` — надбавка\n
           * @enum {string}
           */
          type: 'DISCOUNT' | 'EXTRA_CHARGE';
          /**
           * @description Режим знижки або надбавки\n`PERCENT` — відсоток від basketOrder.sum * basketOrder.qty\n\n`VALUE` — числове значення\n
           * @enum {string}
           */
          mode: 'PERCENT' | 'VALUE';
          /**
           * @description Значення, яке буде фігурувати в розрахунках
           * @enum {number}
           */
          value: PERCENT | VALUE;
        }[];
      }[];
    };
    InvoiceCreateResponse: {
      /**
       * @description Ідентифікатор рахунку, унікальний
       * @example p2_9ZgpZVsl3
       */
      invoiceId: string;
      /**
       * @description Посилання на сторінку оплати
       * @example https://pay.mbnk.biz/p2_9ZgpZVsl3
       */
      pageUrl: string;
    };
    PaymentDirectRequest: {
      /**
       * Format: int64
       * @description Сума оплати у мінімальних одиницях (копійки для гривні)
       * @example 4200
       */
      amount: number;
      /**
       * Format: int32
       * @description ISO 4217 код валюти, за замовчуванням 980 (гривня)
       * @example 980
       */
      ccy?: number;
      /** @description Дані картки */
      cardData: {
        /**
         * @description Номер картки
         * @example 4242424242424242
         */
        pan: string;
        /**
         * @description Термін дії картки у форматі `mmyy`
         * @example 0642
         */
        exp: string;
        /**
         * @description Cvv
         * @example 123
         */
        cvv: string;
      };
      merchantPaymInfo?: components['schemas']['MerchantPaymInfoItem'];
      /**
       * @description Адреса для CallBack (POST) – на цю адресу буде надіслано дані про стан платежу при кожній зміні статусу. Зміст тіла запиту ідентичний відповіді запиту “Статус рахунку”. **Гарантії доставки повідомлень одне за одним не надається. Тобто, може бути ситуація, коли вебхук про успішну оплату (`status=success`) прийде пізніше за вебхук про обробку цієї оплати (`status=processing`). Краще орієнтуватись на поле `modifiedDate` при аналізі поточного статусу рахунку. Вебхук із більшим `modifiedDate` буде актуальним**
       * @example https://example.com/mono/acquiring/webhook/maybesomegibberishuniquestringbutnotnecessarily
       */
      webHookUrl?: string;
      /**
       * @description Тип операції. Для значення `hold` термін складає 9 днів. Якщо через 9 днів холд не буде фіналізовано — він скасовується
       * @default debit
       * @enum {string}
       */
      paymentType?: 'debit' | 'hold';
      /** @description Дані для збереження (токенізації) картки. Для підключення функції, зверніться, будь ласка, в підтримку monobank. Токенізація недоступна за замовчуванням */
      saveCardData?: {
        /** @description Ознака зберігання картки (токенізації) після оплати */
        saveCard: boolean;
        /**
         * @description Ідентифікатор гаманця користувача
         * @example 69f780d841a0434aa535b08821f4822c
         */
        walletId?: string;
      };
      /**
       * @description Адреса для повернення (GET) - на цю адресу буде переадресовано користувача після завершення оплати (у разі успіху або помилки), це поле обовʼязкове при `initiationKind=client`
       * @example https://example.com/your/website/result/page
       */
      redirectUrl?: string;
      /**
       * @description Тип проведення платежу:\n\n  `merchant` - платіж з ініціативи мерчанта, наприклад, регулярний платіж — коли клієнт не бере участі у підтвердженні платежу\n\n  `client` - платіж за вимогою клієнта\n
       * @enum {string}
       */
      initiationKind?: 'merchant' | 'client';
    };
    InvoiceStatusResponse: {
      /**
       * @description Ідентифікатор рахунку
       * @example p2_9ZgpZVsl3
       */
      invoiceId: string;
      /**
       * @description Статус операції:\n\n  `created` - рахунок створено успішно, очікується оплата\n\n  `processing` - платіж обробляється\n\n  `hold` - сума заблокована\n\n  `success` - успішна оплата\n\n  `failure` - неуспішна оплата\n\n  `reversed` - оплата повернена після успіху\n\n  `expired` - час дії вичерпано\n\n\nУ випадку вебхуків гарантії доставки повідомлень одне за одним не надається. Тобто, може бути ситуація, коли вебхук про успішну оплату (`success`) прийде пізніше за вебхук про обробку цієї оплати (`status=processing`).  Краще орієнтуватись на поле `modifiedDate` при аналізі поточного статусу рахунку. Вебхук із більшим `modifiedDate` буде актуальним\n
       * @enum {string}
       */
      status:
        | 'created'
        | 'processing'
        | 'hold'
        | 'success'
        | 'failure'
        | 'reversed'
        | 'expired';
      /**
       * @description Причина відмови
       * @example Неправильний CVV код
       */
      failureReason?: string;
      /**
       * @description Код помилки, яка виникла під час обробки платежу. Що цей код означає, і куди звернутися можна в розділі 'Помилки в процесі оплати'
       * @example 59
       */
      errCode?: string;
      /**
       * Format: int64
       * @description Сума у мінімальних одиницях валюти
       * @example 4200
       */
      amount: number;
      /**
       * Format: int32
       * @description Валюта
       * @example 980
       */
      ccy: number;
      /**
       * Format: int64
       * @description Підсумкова сума у мінімальних одиницях валюти, змінюється після оплати та повернень
       * @example 4200
       */
      finalAmount?: number;
      /**
       * Format: date-time
       * @description Дата і час фін. операції
       */
      createdDate?: string;
      /**
       * Format: date-time
       * @description Дата і час останньої модифікації операції
       */
      modifiedDate?: string;
      /**
       * @description Референс платежу, який визначається продавцем
       * @example 84d0070ee4e44667b31371d8f8813947
       */
      reference?: string;
      /**
       * @description Призначення платежу, визначається продавцем
       * @example Покупка щастя
       */
      destination?: string;
      /** @description Список прийнятих заявок на скасування */
      cancelList?: components['schemas']['CancelListItem'][];
      /** @description Дані оплати, можуть бути `status=processing`, `status=success`, `status=failure`, `status=reversed` */
      paymentInfo?: {
        /**
         * @description Маскований номер картки, за якою здійснювалась оплата
         * @example 444403******1902
         */
        maskedPan: string;
        /**
         * @description Код авторизації транзакції
         * @example 662476
         */
        approvalCode?: string;
        /**
         * @description Ідентифікатор транзакції в платіжній системі
         * @example 060189181768
         */
        rrn?: string;
        /**
         * @description Ідентифікатор транзакції
         * @example 13194036
         */
        tranId?: string;
        /**
         * @description Ідентифікатор платіжного пристрою, через який пройшла транзакція
         * @example MI001088
         */
        terminal: string;
        /**
         * @description Назва банку картки, якою проводилася оплата
         * @example Універсал Банк
         */
        bank?: string;
        /**
         * @description Назва платіжної системи картки
         * @example visa
         * @enum {string}
         */
        paymentSystem: 'visa' | 'mastercard';
        /**
         * @description Метод оплати:\n\n  `pan` - оплата була здійснена за введеним номером картки\n\n  `apple` - оплата була здійснена через apple pay\n\n  `google` - оплата була здійснена через google pay\n\n  `monobank` - оплата була здійснена через monobank\n\n  `wallet` - оплата була здійснена токенізованою карткою\n\n  `direct` - оплата була здійснена через апі \'Оплата за реквізитами\' (за умови, що у мерчанта був PCI DSS сертифікат)\n
         * @enum {string}
         */
        paymentMethod:
          | 'pan'
          | 'apple'
          | 'google'
          | 'monobank'
          | 'wallet'
          | 'direct';
        /**
         * Format: int64
         * @description Еквайрингова комісія в мінімальних одиницях
         */
        fee?: number;
        /**
         * @description Країна банку (ISO-3166-1 numeric), якому належить картка, якою була здійснена оплата
         * @example 804
         */
        country?: string;
      };
      /** @description Параметри картки */
      walletData?: {
        /**
         * @description Токен картки
         * @example 67XZtXdR4NpKU3
         */
        cardToken: string;
        /**
         * @description Ідентифікатор гаманця покупця
         * @example c1376a611e17b059aeaf96b73258da9c
         */
        walletId: string;
        /**
         * @description Статус токенізації картки:\n\n  `new` - прийнято заявку на токенізацію\n\n  `created` - картку успішно токенізовано\n\n  `failed` - картку не вдалось токенізувати              \n
         * @enum {string}
         */
        status: 'new' | 'created' | 'failed';
      };
    };
    InvoiceCancelRequest: {
      /**
       * @description Ідентифікатор рахунку
       * @example p2_9ZgpZVsl3
       */
      invoiceId: string;
      /**
       * @description Референс операції скасування, який визначається продавцем
       * @example 635ace02599849e981b2cd7a65f417fe
       */
      extRef?: string;
      /**
       * Format: int64
       * @description Сума у мінімальних одиницях (при частковому поверненні)
       * @example 5000
       */
      amount?: number;
      /** @description Список товарів для створення чеку повернення, поле обов\'язкове у випадку активованої опції фіскалізації */
      items?: components['schemas']['FiscalizationItem'][];
    };
    InvoiceRemoveRequest: {
      /**
       * @description Ідентифікатор рахунку
       * @example p2_9ZgpZVsl3
       */
      invoiceId: string;
    };
    EmptyResponse: Record<string, never>;
    InvoiceCancelResponse: {
      /**
       * @description Статус операції:\n\n  `processing` - заява на скасування знаходиться в обробці\n\n  `success` - заяву на скасування виконано успішно\n\n  `failure` - неуспішне скасування\n
       * @enum {string}
       */
      status: 'processing' | 'success' | 'failure';
      /**
       * Format: date-time
       * @description Дата і час створення заяви на скасування
       */
      createdDate: string;
      /**
       * Format: date-time
       * @description Дата і час останньої модифікації операції скасування
       */
      modifiedDate: string;
    };
    InvoicePaymentInfoResponse: {
      /**
       * @description Маскований номер картки, за якою здійснювалась оплата
       * @example 444403******1902
       */
      maskedPan: string;
      /**
       * @description Код авторизації транзакції
       * @example 662476
       */
      approvalCode: string;
      /**
       * @description Ідентифікатор транзакції в платіжній системі
       * @example 060189181768
       */
      rrn: string;
      /**
       * Format: int64
       * @description Сума авторизації у мінімальних одиницях валюти
       * @example 4200
       */
      amount: number;
      /**
       * Format: int32
       * @description Валюта
       * @example 980
       */
      ccy: number;
      /**
       * Format: int64
       * @description Підсумкова сума у мінімальних одиницях валюти
       * @example 4200
       */
      finalAmount: number;
      /**
       * Format: date-time
       * @description Дата і час фін. операції
       */
      createdDate?: string;
      /**
       * @description Ідентифікатор платіжного пристрою, через який пройшла транзакція
       * @example MI001088
       */
      terminal: string;
      /**
       * @description Тип оплати:\n\n  `full` - повна оплата при покупці\n\n  `bnpl_parts_4` - оплата 4-ма частинами (період платежів 14 днів)\n\n  `bnpl_later_30` - оплата на 30-тий день з дня покупки\n
       * @enum {string}
       */
      paymentScheme: 'full' | 'bnpl_parts_4' | 'bnpl_later_30';
      /**
       * @description Метод оплати:\n\n  `pan` - оплата була здійснена за введеним номером картки\n\n  `apple` - оплата була здійснена через apple pay\n\n  `google` - оплата була здійснена через google pay\n\n  `monobank` - оплата була здійснена через monobank\n  \n  `wallet` - оплата була здійснена токенізованою карткою\n
       * @enum {string}
       */
      paymentMethod: 'pan' | 'apple' | 'google' | 'monobank' | 'wallet';
      /**
       * Format: int64
       * @description Еквайрингова комісія
       * @example 420
       */
      fee?: number;
      /**
       * @description Чи належить картка, якою здійснювалась оплата, українському банку
       * @example true
       */
      domesticCard: boolean;
      /**
       * @description Країна банку (ISO-3166-1 numeric), якому належить картка, якою була здійснена оплата
       * @example 804
       */
      country: string;
      /** @description Список прийнятих заявок на скасування */
      cancelList?: components['schemas']['CancelListItem'][];
    };
    InvoiceFinalizeRequest: {
      /**
       * @description Ідентифікатор рахунку
       * @example p2_9ZgpZVsl3
       */
      invoiceId: string;
      /**
       * Format: int64
       * @description Сума у мінімальних одиницях
       * @example 4200
       */
      amount?: number;
      /** @description Список товарів для для фіскалізації, коли сума фіналізації холду не співпадає з оригінальною сумою оплати */
      items?: components['schemas']['FiscalizationItem'][];
    };
    InvoiceFinalizeResponse: {
      /**
       * @description Статус заяви:\n\n  `success` - заяву на фіналізацію прийнято\n
       * @enum {string}
       */
      status: 'success';
    };
    PubkeyResponse: {
      /**
       * @description base64-закодований x.509 ecdsa відркитий ключ
       * @example LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFK0UxRnBVZzczYmhGdmp2SzlrMlhJeTZtQkU1MQpib2F0RU1qU053Z1l5ZW55blpZQWh3Z3dyTGhNY0FpT25SYzNXWGNyMGRrY2NvVnFXcVBhWVQ5T3hRPT0KLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==
       */
      key: string;
    };
    QrDetailsResponse: {
      /**
       * @description Короткий ідентифікатор QR-каси
       * @example OBJE
       */
      shortQrId: string;
      /**
       * @description Ідентифікатор рахунку для оплати, присутній лише у разі наявності встановленої суми
       * @example 4EwIUTA12JIZ
       */
      invoiceId?: string;
      /**
       * Format: int64
       * @description Сума у мінімальних одиницях
       * @example 4200
       */
      amount?: number;
      /**
       * Format: int32
       * @description ISO 4217 код валюти
       * @example 980
       */
      ccy?: number;
    };
    QrResetRequest: {
      /**
       * @description Ідентифікатор QR-каси
       * @example XJ_DiM4rTd5V
       */
      qrId: string;
    };
    QrListResponse: {
      /** @description Список QR-кас */
      list?: components['schemas']['QrListItem'][];
    };
    MerchantDetailsResponse: {
      /**
       * @description Ідентифікатор мерчанта
       * @example 12o4Vv7EWy
       */
      merchantId: string;
      /**
       * @description Найменування мерчанта
       * @example Your Favourite Company
       */
      merchantName: string;
      /**
       * @description Код ЄДРПОУ
       * @example 4242424242
       */
      edrpou: string;
    };
    MerchantStatementResponse: {
      /** @description Виписка, впорядкована від більшої дати до меншої */
      list?: components['schemas']['MerchantStatementItem'][];
    };
    /** @description Параметри картки */
    CardItem: {
      /**
       * @description Номер картки
       * @example 4242424242424242
       */
      pan: string;
      /**
       * @description Строк дії картки у форматі MMYY
       * @example 0142
       */
      exp: string;
      /**
       * @description CVV2 код
       * @example 645
       */
      cvv: string;
    };
    MerchantWalletResponse: {
      wallet: components['schemas']['WalletItem'][];
    };
    /** @description Параметри картки */
    WalletItem: {
      /**
       * @description Токен картки
       * @example 67XZtXdR4NpKU3
       */
      cardToken: string;
      /**
       * @description Маскований номер картки
       * @example 424242******4242
       */
      maskedPan: string;
      /**
       * @description Країна банку (ISO-3166-1 numeric), якому належить картка
       * @example 804
       */
      country?: string;
    };
    MerchantWalletPaymentRequest: {
      /**
       * @description Токен картки
       * @example 67XZtXdR4NpKU3
       */
      cardToken: string;
      /**
       * Format: int64
       * @description Сума у мінімальних одиницях
       * @example 4200
       */
      amount: number;
      /**
       * Format: int32
       * @description ISO 4217 код валюти
       * @example 980
       */
      ccy: number;
      /**
       * @description Адреса для повернення (GET) - на цю адресу буде переадресовано користувача за умови проведення 3DS
       * @example https://example.com/your/website/result/page
       */
      redirectUrl?: string;
      /**
       * @description Адреса для CallBack (POST) – на цю адресу буде надіслано дані про стан платежу при кожній зміні статусу. Зміст тіла запиту ідентичний відповіді запиту “Статус рахунку”. **Гарантії доставки повідомлень одне за одним не надається. Тобто, може бути ситуація, коли вебхук про успішну оплату (`status=success`) прийде пізніше за вебхук про обробку цієї оплати (`status=processing`). Краще орієнтуватись на поле `modifiedDate` при аналізі поточного статусу рахунку. Вебхук із більшим `modifiedDate` буде актуальним**
       * @example https://example.com/mono/acquiring/webhook/maybesomegibberishuniquestringbutnotnecessarily
       */
      webHookUrl?: string;
      /**
       * @description Тип проведення платежу:\n\n  `merchant` - платіж з ініціативи мерчанта, наприклад, регулярний платіж — коли клієнт не бере участі у підтвердженні платежу\n\n  `client` - платіж за вимогою клієнта, наприклад, клієнт виконує оплату зі збереженої картки\n
       * @enum {string}
       */
      initiationKind: 'merchant' | 'client';
      merchantPaymInfo?: components['schemas']['MerchantPaymInfoItem'];
    };
    MerchantWalletPaymentResponse: {
      /**
       * @description Ідентифікатор рахунку, за яким здійснювалась оплата
       * @example 2210012MPLYwJjVUzchj
       */
      invoiceId: string;
      /**
       * @description Посилання на 3DS
       * @example https://example.com/tds/url
       */
      tdsUrl?: string;
      /**
       * @description Статус оплати
       * @example success
       * @enum {string}
       */
      status: 'processing' | 'success' | 'failure';
      /**
       * @description Причина відмови
       * @example Неправильний CVV код
       */
      failureReason?: string;
      /**
       * Format: int64
       * @description Сума у мінімальних одиницях
       * @example 4200
       */
      amount: number;
      /**
       * Format: int32
       * @description ISO 4217 код валюти
       * @example 980
       */
      ccy: number;
      /**
       * Format: date-time
       * @description Дата і час створення заяви на оплату
       */
      createdDate: string;
      /**
       * Format: date-time
       * @description Дата і час останньої модифікації операції оплати
       */
      modifiedDate: string;
    };
    SubmerchantListResponse: {
      list?: {
        /**
         * @description Ідентифікатор терміналу
         * @example 0a8637b3bccb42aa93fdeb791b8b58e9
         */
        code: string;
        /**
         * @description ЄДРПОУ власника терміналу
         * @example 4242424242
         */
        edrpou?: string;
        /**
         * @description IBAN власника терміналу
         * @example UA213996220000026007233566001
         */
        iban: string;
      }[];
    };
    FiscalCheckListResponse: {
      checks?: {
        /**
         * @description Ідентифікатор чеку
         * @example a2fd4aef-cdb8-4e25-9b36-b6d4672c554d
         */
        id: string;
        /**
         * @description Тип чеку
         * @example sale
         * @enum {string}
         */
        type: 'sale' | 'return';
        /**
         * @description Статус чеку
         * @example done
         * @enum {string}
         */
        status: 'new' | 'process' | 'done' | 'failed';
        /**
         * @description Опис статусу чеку
         * @example
         */
        statusDescription?: string;
        /**
         * @description Посилання на чек
         * @example https://cabinet.tax.gov.ua/cashregs/check
         */
        taxUrl?: string;
        /**
         * @description base64-закодований PDF файл чеку
         * @example CJFVBERi0xLj4QKJaqrrK0KMSAw123I4G9ia3go38PAovQ43JlYXRvciAoQXBhY2hl5IEZPUCBWZXJzaW9uIfDIuMykKL...
         */
        file?: string;
        /**
         * @description Сервіс, через який виконувалась фіскалізація
         * @example monopay
         * @enum {string}
         */
        fiscalizationSource: 'checkbox' | 'monopay';
      }[];
    };
    ForbiddenError: {
      /**
       * @description Код помилки, за яким можна розрізняти види клієнтських помилок:\n  \n  `FORBIDDEN` - у запиті було надіслано невалідний X-Token            \n
       * @example FORBIDDEN
       */
      errCode: string;
      /**
       * @description Опис помилки; має виключно інформативну функцію, використовувати його в бізнес-логіці не варто
       * @example forbidden
       */
      errText: string;
    };
    FiscalizationItem: {
      /**
       * @description Назва товару
       * @example Табуретка
       */
      name: string;
      /**
       * Format: float
       * @description Кількість
       * @example 2
       */
      qty: number;
      /**
       * Format: int64
       * @description Сума у мінімальних одиницях валюти за одиницю товару
       * @example 2100
       */
      sum: number;
      /**
       * @description Код товару, обов\'язковий для фіскалізації
       * @example d21da1c47f3c45fca10a10c32518bdeb
       */
      code: string;
      /**
       * @description Значення штрих-коду, може бути потрібно для фіскалізації
       * @example 3b2a558cc6e44e218cdce301d80a1779
       */
      barcode?: string;
      /**
       * @description Текст, що передує назві товару, може бути потрібний для фіскалізації
       * @example Хідер
       */
      header?: string;
      /**
       * @description Текст, після товару, може бути потрібний для фіскалізації
       * @example Футер
       */
      footer?: string;
      /** @description Масив податкових ставок, які було обрано на порталі Checkbox при реєстрації каси. При використанні ПРРО monopay податкові ставки наразі не застосовуються */
      tax?: number[];
      /**
       * @description Код УКТ ЗЕД
       * @example uktzedcode
       */
      uktzed?: string;
    };
    TooManyRequestsError: {
      /**
       * @description Код помилки, за яким можна розрізняти види клієнтських помилок:\n                \n  `TMR` - занадто багато запитів, потрібно почекати, перш ніж робити новий запит\n
       * @example TMR
       */
      errCode: string;
      /**
       * @description Опис помилки; має виключно інформативну функцію, використовувати його в бізнес-логіці не варто
       * @example too many requests
       */
      errText: string;
    };
    BadRequestError: {
      /**
       * @description Код помилки, за яким можна розрізняти види клієнтських помилок:\n\n  `BAD_REQUEST` - запит некоректний, потрібно виправити параметри запиту та спробувати ще раз;\n  \n  `1001` - запит некоректний, потрібно виправити параметри запиту та спробувати ще раз;                          \n\n  `INVALID_MERCHANT_PAYM_INFO` - некоректне значення в обʼєкті `merchantPaymInfo`; при створенні рахунку, оплатах за токеном та оплаті за реквізитами;\n  \n  `ORDER_IN_PROGRESS` - сума, встановлена на qr-касу вже в процесі оплати, тому при спробі видалити суму оплати буде помилка;\n  \n  `HOLD_INVOICE_NOT_FINALIZED` - рахунок створено з `paymentType=hold`, сплачено, але ще не фіналізовано; повертається при спробі отримати розширену інформацію про успішну оплату;\n  \n  `WRONG_CANCEL_AMOUNT` - при спробі скасування оплати було вказано невірну суму або цю оплату вже було скасовано;\n  \n  `TOKEN_NOT_FOUND` - токен картки, який було вказано в запиті, не знайдено;\n
       * @example BAD_REQUEST
       */
      errCode: string;
      /**
       * @description Опис помилки; має виключно інформативну функцію, використовувати його в бізнес-логіці не варто
       * @example empty \'invoiceId\'
       */
      errText: string;
    };
    MethodNotAllowedError: {
      /**
       * @description Код помилки, за яким можна розрізняти види клієнтських помилок:\n\n  `METHOD_NOT_ALLOWED` - некоректний [http-метод](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods);\n
       * @example METHOD_NOT_ALLOWED
       */
      errCode: string;
      /**
       * @description Опис помилки; має виключно інформативну функцію, використовувати його в бізнес-логіці не варто
       * @example Method not allowed
       */
      errText: string;
    };
    InternalServerError: {
      /**
       * @description Код помилки, за яким можна розрізняти види клієнтських помилок:\n              \n  `INTERNAL_ERROR` - обробка запиту завершилася непередбаченою помилкою;\n\n  `CANCEL_NOT_AVAILABLE` - неможливо скасувати оплату; дана помилка повертається при спробі скасування оплати;\n
       * @example INTERNAL_ERROR
       */
      errCode: string;
      /**
       * @description Опис помилки; має виключно інформативну функцію, використовувати його в бізнес-логіці не варто
       * @example internal server error
       */
      errText: string;
    };
    NotFoundError: {
      /**
       * @description Код помилки, за яким можна розрізняти види клієнтських помилок:\n              \n  `NOT_FOUND` - пошук за одним із параметрів запиту завершився неуспішно;\n  \n  `1004` - пошук за одним із параметрів запиту завершився неуспішно;\n
       * @example NOT_FOUND
       */
      errCode: string;
      /**
       * @description Опис помилки; має виключно інформативну функцію, використовувати його в бізнес-логіці не варто
       * @example invalid \'qrId\'
       */
      errText: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
